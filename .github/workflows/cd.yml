name: Continuous Deployment

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    branches: [ master ]

jobs:
  wasm-pack:
    name: wasm-pack
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - run: wasm-pack build ./js_lib/ --scope digitalpalitools --target bundler --release

  build-test-deploy-linux:
    name: Build, test & deploy (linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install musl tools
        run: |
          sudo apt-get install musl-tools

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: x86_64-unknown-linux-musl

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: build
          args: --release --target x86_64-unknown-linux-musl

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test
          args: --release --target x86_64-unknown-linux-musl

      - name: Azure Login
        if: github.event_name != 'pull_request'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_KSAPPLICATIONS_STORAGE }}

      - name: Deploy
        if: github.event_name != 'pull_request'
        run: |
          az storage blob upload --account-name ksapplications --container-name '$web' --name 'inflections/all_words_gen' --file ./target/x86_64-unknown-linux-musl/release/all_words_gen --content-cache-control 'no-store max-age=0' --content-type "application/x-executable"
        shell: pwsh

      - name: Azure Logout
        if: github.event_name != 'pull_request'
        run: |
          az logout

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings

  finish:
    name: Finish
    needs: [build-test-deploy-linux, lints, wasm-pack]
    runs-on: ubuntu-latest
    steps:
      - name: Notify DPT on Discord
        if: github.event_name != 'pull_request'
        env:
          JOB_STATUS: ${{ job.status }}
          WEBHOOK_URL: ${{ secrets.DISCORD_DPT_DEPLOYMENT_NOTIFICATIONS_WEBHOOK_URL }}
          HOOK_OS_NAME: ${{ runner.os }}
          WORKFLOW_NAME: ${{ github.workflow }}
        run: |
          git clone https://github.com/DiscordHooks/github-actions-discord-webhook webhook
          bash webhook/send.sh $JOB_STATUS $WEBHOOK_URL
        shell: bash
